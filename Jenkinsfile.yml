pipeline {
    agent any

    environment {
        DOCKER_HUB_REPO = 'shayanzzzz/devops-node-mongo-app'
        DOCKER_HUB_CREDENTIALS = 'docker-hub'
        KUBECONFIG_CREDENTIALS = 'kubeconfig'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git 'https://github.com/ShayanZZ/devops-node-mongo-app.git'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${DOCKER_HUB_REPO}:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_HUB_CREDENTIALS) {
                        dockerImage.push("${env.BUILD_NUMBER}")
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: "${KUBECONFIG_CREDENTIALS}", variable: 'KUBECONFIG')]) {
                    sh '''
                    sed -i 's|image: shayanzzzz/devops-node-mongo-app:.*|image: shayanzzzz/devops-node-mongo-app:'"${BUILD_NUMBER}"'|' app-deployment.yml
                    kubectl apply -f mongo-deployment.yml
                    kubectl apply -f app-deployment.yml
                    '''
                }
            }
        }
    }

    post {
        always {
            script {
                dockerImage.remove()
            }
        }
        failure {
            echo 'The Pipeline failed'
        }
    }
}